{"version":3,"file":"component---src-pages-adm-tsx-ac3a1c135bdfba0bb032.js","mappings":"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","sources":["webpack://Tomate Azul/./src/pages/adm.tsx"],"sourcesContent":["import { TextField, Button, Modal } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport Layout from '../components/Layout'\nimport { Box, borderRadius, display } from '@mui/system'\nimport { signIn } from '../utils/firebase'\nimport ErrorMessage from '../components/ErrorMessage'\n\n// const secret = process.env.GATSBY_ADM_PWD\n\ntype Pedidos = {\n  data: string\n  id: string\n  nome: string\n  pedido: string\n  telefone: string\n}\n\nexport default function AdmPage() {\n  const [loggedIn, setLoggedInd] = useState(false)\n  const [pwd, setPwd] = useState('')\n  const [pedidos, setPedidos] = useState<Pedidos[] | []>([])\n  const [pedidoKey, setPedidoKey] = useState<any>()\n  const [checkPedidos, setCheckPedidos] = useState(false)\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(true)\n  const [user, setUser] = useState<any>({})\n  const [errorMessage, setErrorMessage] = useState('')\n  const [openModal, setOpenModal] = useState(false)\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetch(\n        `${process.env.GATSBY_API_URL}/pedidos.json?auth=${user.accessToken}`\n      )\n        .then(response => {\n          response.json().then(data => {\n            setPedidos(data)\n          })\n        })\n        .catch(error => {\n          console.log(error)\n          setErrorMessage(error.message)\n        })\n    }\n  }, [loggedIn, checkPedidos])\n\n  useEffect(() => {\n    if (!checkButtonEnabled) {\n      setTimeout(() => {\n        setCheckButtonEnabled(true)\n      }, 3000)\n    }\n  }, [checkButtonEnabled])\n\n  function handleTextEdit(event: React.ChangeEvent<HTMLInputElement>) {\n    setPwd(event.target.value)\n  }\n\n  async function handleLogin() {\n    // pwd === process.env.GATSBY_ADM_PWD\n    //   ? setLoggedInd(true)\n    //   : setLoggedInd(false)\n    signIn('tomate@barretolopes.com', pwd).then((user: any) => {\n      if (user) {\n        setLoggedInd(true)\n        setUser(user)\n      }\n    })\n  }\n\n  function handleModalConcluirPedido(key: any) {\n    setPedidoKey(key)\n    setOpenModal(true)\n  }\n\n  function handleConcluirPedido() {\n    fetch(\n      `${process.env.GATSBY_API_URL}/pedidos/${pedidoKey}.json?auth=${user.accessToken}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n      // .then(() => setPedidos(pedidos.filter((p: any) => p.id !== pedido.id)))\n      .then(() => {\n        // const tempDict = [...pedidos]\n        // delete tempDict[key]\n        setPedidos(() => {\n          delete pedidos[pedidoKey]\n          return { ...pedidos }\n        })\n        setOpenModal(false)\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleCheckPedidos() {\n    setCheckPedidos(!checkPedidos)\n    setCheckButtonEnabled(false)\n  }\n\n  return (\n    <>\n      {errorMessage && <ErrorMessage errorMessage={errorMessage} />}\n      <Modal open={openModal}>\n        <Box className='tomateModal'>\n          <p className='tomateModalTitle'>\n            O pedido {pedidos[pedidoKey]?.id} será excluído para sempre. \n          </p>\n          <p>\n          Você já salvou os dados do cliente?\n          </p>\n          <div className='tomateModalActions'>\n            <Button\n              variant='contained'\n              color='warning'\n              onClick={handleConcluirPedido}\n              size='small'\n            >\n              EXCLUIR\n            </Button>\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={() => setOpenModal(false)}\n              size='small'\n            >\n              CANCELAR\n            </Button>\n            <a\n\n            style={{\n              padding: '10px',\n              borderRadius: '5px',\n              background: 'green',\n              color: 'white',\n              fontSize: '14px'\n            }}\n              target='_blank'\n              href={`https://wa.me/55${pedidos[pedidoKey].telefone.replace(\n                /[^0-9]/g,\n                ''\n              )}?text=Olá! Aqui é do Tomate Azul. Sobre o pedido \"${\n                pedidos[pedidoKey].id\n              }\"`}\n            >\n              WHATSAPP\n            </a>\n          </div>\n        </Box>\n      </Modal>\n      <Layout>\n        {!loggedIn ? (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n              mt: '20px',\n            }}\n          >\n            <TextField\n              id='pwd'\n              label='senha'\n              variant='outlined'\n              type='password'\n              onChange={handleTextEdit}\n            />\n            <Button onClick={handleLogin}>Login</Button>\n          </Box>\n        ) : (\n          <Box\n            m='0 auto'\n            mt={'20px'}\n            width={'90%'}\n            display='flex'\n            flexDirection='column'\n            justifyContent='center'\n            alignItems='center'\n          >\n            <Button\n              onClick={handleCheckPedidos}\n              variant='outlined'\n              disabled={!checkButtonEnabled}\n            >\n              Atualizar Pedidos\n            </Button>\n            {pedidos && Object.keys(pedidos).length ? (\n              Object.keys(pedidos).map((key: any) => (\n                <Box\n                  key={key}\n                  mb='15px'\n                  mt='15px'\n                  sx={{\n                    backgroundColor: 'rgb(172, 178, 238)',\n                  }}\n                >\n                  <h2>{pedidos[key].nome}</h2>\n                  <h3>\n                    <a\n                      target='_blank'\n                      href={`https://wa.me/55${pedidos[key].telefone.replace(\n                        /[^0-9]/g,\n                        ''\n                      )}?text=Olá! Aqui é do Tomate Azul. Sobre o pedido \"${\n                        pedidos[key].id\n                      }\"`}\n                    >\n                      {pedidos[key].telefone}\n                    </a>\n                  </h3>\n\n                  <p>{pedidos[key].data}</p>\n                  <p>{pedidos[key].pedido}</p>\n                  <Button\n                    onClick={() => handleModalConcluirPedido(key)}\n                    variant='contained'\n                  >\n                    CONCLUIR\n                  </Button>\n                </Box>\n              ))\n            ) : (\n              <p>Sem pedido no momento</p>\n            )}\n          </Box>\n        )}\n      </Layout>\n    </>\n  )\n}\n"],"names":["AdmPage","loggedIn","setLoggedInd","useState","pwd","setPwd","pedidos","setPedidos","pedidoKey","setPedidoKey","checkPedidos","setCheckPedidos","checkButtonEnabled","setCheckButtonEnabled","user","setUser","errorMessage","setErrorMessage","openModal","setOpenModal","useEffect","fetch","process","GATSBY_API_URL","accessToken","then","response","json","data","catch","error","console","log","message","setTimeout","React","ErrorMessage","Modal","open","Box","className","_pedidos$pedidoKey","id","Button","variant","color","onClick","method","headers","err","size","style","padding","borderRadius","background","fontSize","target","href","telefone","replace","Layout","m","mt","width","display","flexDirection","justifyContent","alignItems","disabled","Object","keys","length","map","key","mb","sx","backgroundColor","nome","pedido","handleModalConcluirPedido","TextField","label","type","onChange","event","value","async","signIn"],"sourceRoot":""}